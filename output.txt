0: (12.367009, 24.454000)
1: (26.351567, 17.070859)
2: (53.038714, 25.061554)
3: (72.929920, 23.981158)
4: (92.663456, 24.366065)
5: (11.387863, 39.021672)
6: (29.730987, 34.713955)
7: (45.083358, 35.066913)
8: (74.572464, 45.716387)
9: (84.536492, 37.946738)
10: (7.168337, 63.322761)
11: (26.588961, 56.759128)
12: (50.401502, 64.078822)
13: (69.329131, 57.754612)
14: (94.193969, 60.109476)
15: (14.508360, 80.542687)
16: (24.662572, 85.587750)
17: (47.527941, 83.917175)
18: (64.780060, 83.915084)
19: (91.520853, 78.149047)
    0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19
0   0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0
1   1  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0
2   0  1  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0
3   0  0  1  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0
4   0  0  0  1  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0
5   1  0  0  0  0  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0
6   0  1  0  0  0  1  0  1  0  0  0  1  0  0  0  0  0  0  0  0
7   0  0  1  0  0  0  1  0  1  0  0  0  1  0  0  0  0  0  0  0
8   0  0  0  1  0  0  0  1  0  1  0  0  0  1  0  0  0  0  0  0
9   0  0  0  0  1  0  0  0  1  0  0  0  0  0  1  0  0  0  0  0
10  0  0  0  0  0  1  0  0  0  0  0  1  0  0  0  1  0  0  0  0
11  0  0  0  0  0  0  1  0  0  0  1  0  1  0  0  0  1  0  0  0
12  0  0  0  0  0  0  0  1  0  0  0  1  0  1  0  0  0  1  0  0
13  0  0  0  0  0  0  0  0  1  0  0  0  1  0  1  0  0  0  1  0
14  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0  0  0  0  0  1
15  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  1  0  0  0
16  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0  1  0  0
17  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0  1  0
18  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0  1
19  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0
      0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19
0   0.0 15.8  0.0  0.0  0.0 14.6  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
1  15.8  0.0 27.9  0.0  0.0  0.0 18.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
2   0.0 27.9  0.0 19.9  0.0  0.0  0.0 12.8  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
3   0.0  0.0 19.9  0.0 19.7  0.0  0.0  0.0 21.8  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
4   0.0  0.0  0.0 19.7  0.0  0.0  0.0  0.0  0.0 15.8  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
5  14.6  0.0  0.0  0.0  0.0  0.0 18.8  0.0  0.0  0.0 24.7  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
6   0.0 18.0  0.0  0.0  0.0 18.8  0.0 15.4  0.0  0.0  0.0 22.3  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0
7   0.0  0.0 12.8  0.0  0.0  0.0 15.4  0.0 31.4  0.0  0.0  0.0 29.5  0.0  0.0  0.0  0.0  0.0  0.0  0.0
8   0.0  0.0  0.0 21.8  0.0  0.0  0.0 31.4  0.0 12.6  0.0  0.0  0.0 13.1  0.0  0.0  0.0  0.0  0.0  0.0
9   0.0  0.0  0.0  0.0 15.8  0.0  0.0  0.0 12.6  0.0  0.0  0.0  0.0  0.0 24.2  0.0  0.0  0.0  0.0  0.0
10  0.0  0.0  0.0  0.0  0.0 24.7  0.0  0.0  0.0  0.0  0.0 20.5  0.0  0.0  0.0 18.7  0.0  0.0  0.0  0.0
11  0.0  0.0  0.0  0.0  0.0  0.0 22.3  0.0  0.0  0.0 20.5  0.0 24.9  0.0  0.0  0.0 28.9  0.0  0.0  0.0
12  0.0  0.0  0.0  0.0  0.0  0.0  0.0 29.5  0.0  0.0  0.0 24.9  0.0 20.0  0.0  0.0  0.0 20.0  0.0  0.0
13  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 13.1  0.0  0.0  0.0 20.0  0.0 25.0  0.0  0.0  0.0 26.6  0.0
14  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 24.2  0.0  0.0  0.0 25.0  0.0  0.0  0.0  0.0  0.0 18.2
15  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 18.7  0.0  0.0  0.0  0.0  0.0 11.3  0.0  0.0  0.0
16  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 28.9  0.0  0.0  0.0 11.3  0.0 22.9  0.0  0.0
17  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 20.0  0.0  0.0  0.0 22.9  0.0 17.3  0.0
18  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 26.6  0.0  0.0  0.0 17.3  0.0 27.4
19  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 18.2  0.0  0.0  0.0 27.4  0.0
        0      1      2      3      4      5      6      7      8      9     10     11     12     13     14     15     16     17     18     19
0  0.0000 0.5469 0.0000 0.0000 0.0000 0.4531 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
1  0.6474 0.0000 0.1536 0.0000 0.0000 0.0000 0.1990 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
2  0.0000 0.7844 0.0000 0.1548 0.0000 0.0000 0.0000 0.0608 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
3  0.0000 0.0000 0.8647 0.0000 0.1119 0.0000 0.0000 0.0000 0.0235 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
4  0.0000 0.0000 0.0000 0.7321 0.0000 0.0000 0.0000 0.0000 0.0000 0.2679 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
5  0.7679 0.0000 0.0000 0.0000 0.0000 0.0000 0.0622 0.0000 0.0000 0.0000 0.1699 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
6  0.0000 0.2812 0.0000 0.0000 0.0000 0.0998 0.0000 0.6187 0.0000 0.0000 0.0000 0.0003 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
7  0.0000 0.0000 0.9820 0.0000 0.0000 0.0000 0.0030 0.0000 0.0044 0.0000 0.0000 0.0000 0.0105 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
8  0.0000 0.0000 0.0000 0.5531 0.0000 0.0000 0.0000 0.2657 0.0000 0.1366 0.0000 0.0000 0.0000 0.0445 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000
9  0.0000 0.0000 0.0000 0.0000 0.1074 0.0000 0.0000 0.0000 0.3248 0.0000 0.0000 0.0000 0.0000 0.0000 0.5678 0.0000 0.0000 0.0000 0.0000 0.0000
10 0.0000 0.0000 0.0000 0.0000 0.0000 0.0532 0.0000 0.0000 0.0000 0.0000 0.0000 0.4560 0.0000 0.0000 0.0000 0.4909 0.0000 0.0000 0.0000 0.0000
11 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.1402 0.0000 0.0000 0.0000 0.3061 0.0000 0.0738 0.0000 0.0000 0.0000 0.4799 0.0000 0.0000 0.0000
12 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.5491 0.0000 0.0000 0.0000 0.3831 0.0000 0.0046 0.0000 0.0000 0.0000 0.0632 0.0000 0.0000
13 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.9396 0.0000 0.0000 0.0000 0.0488 0.0000 0.0013 0.0000 0.0000 0.0000 0.0103 0.0000
14 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.5874 0.0000 0.0000 0.0000 0.3002 0.0000 0.0000 0.0000 0.0000 0.0000 0.1124
15 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.6499 0.0000 0.0000 0.0000 0.0000 0.0000 0.3501 0.0000 0.0000 0.0000
16 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.4080 0.0000 0.0000 0.0000 0.3893 0.0000 0.2027 0.0000 0.0000
17 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.2414 0.0000 0.0000 0.0000 0.2735 0.0000 0.4851 0.0000
18 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.9789 0.0000 0.0000 0.0000 0.0048 0.0000 0.0162
19 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.4821 0.0000 0.0000 0.0000 0.5179 0.0000
 1 1 1 1 1
 1 1 0 1 0
 1 1 1 1 1
 1 0 0 0 1
target start = 1
Dijkstra:
Start: 1
Vertexes selected: 0 2 3 4 5 6 7 8 9 10 11 12 13 15 16 17
distances[0] = 15.813875
Shortest path: 1 0
distances[1] = 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.000000
Shortest path:
distances[2] = 27.857764
Shortest path: 1 2
distances[3] = 47.778289
Shortest path: 1 2 3
distances[4] = 67.515579
Shortest path: 1 2 3 4
distances[5] = 30.414416
Shortest path: 1 0 5
distances[6] = 17.963833
Shortest path: 1 6
distances[7] = 33.320261
Shortest path: 1 6 7
distances[8] = 64.673390
Shortest path: 1 6 7 8
distances[9] = 77.308630
Shortest path: 1 6 7 8 9
distances[10] = 55.079113
Shortest path: 1 0 5 10
distances[11] = 40.231792
Shortest path: 1 6 11
distances[12] = 62.815575
Shortest path: 1 6 7 12
distances[13] = 77.803943
Shortest path: 1 6 7 8 13
distances[14] = 101.484110
Shortest path:
distances[15] = 73.798136
Shortest path: 1 0 5 10 15
distances[16] = 69.124705
Shortest path: 1 6 11 16
distances[17] = 82.860963
Shortest path: 1 6 7 12 17
distances[18] = 100.113082
Shortest path:
distances[19] = 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.000000
Shortest path:
Vertex path (0): 1
Vertex path (2): 1
Vertex path (3): 1
Vertex path (4): 1
Vertex path (5): 1
Vertex path (6): 1
Vertex path (7): 1
Vertex path (8): 1
Vertex path (9): 1
Vertex path (10): 1
Vertex path (11): 1
Vertex path (12): 1
Vertex path (13): 1
Vertex path (15): 1
Vertex path (16): 1
Vertex path (17): 1
YES! Enclosed!
@643 (v0 - v1 - v2) = (-1 - 1 - 0)
prob_start_v1 = 1.000000, prob_start_v2 = 0.647410
******* v0 == -1 *******
dist_v1_m1 = 15.813875
                       prob_start_v2 = 0.647410
                       dist_sav = 15.813875
                       exp = 10.238059
@706 expects_set.size = 1
@643 (v0 - v1 - v2) = (-1 - 1 - 2)
prob_start_v1 = 1.000000, prob_start_v2 = 0.153632
******* v0 == -1 *******
dist_v1_m1 = 27.857764
                       prob_start_v2 = 0.153632
                       dist_sav = 20.000000
                       exp = 3.072646
@706 expects_set.size = 2
@643 (v0 - v1 - v2) = (-1 - 1 - 2)
prob_start_v1 = 1.000000, prob_start_v2 = 0.153632
******* v0 == -1 *******
dist_v1_m1 = 27.857764
                       prob_start_v2 = 0.153632
                       dist_sav = 20.000000
                       exp = 3.072646
@643 (v0 - v1 - v2) = (1 - 2 - 3)
prob_start_v1 = 0.153632, prob_start_v2 = 0.023783
******* Rock n Roll *******
dist_v0_v1 = 27.857764, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.153632
exp = 3.072646
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.153632
exp = 3.072646
******* Rock n Roll *******
dist_v0_v1 = 27.857764, dist_v1_m1 = 19.920525
***** Not to move:
dist_sav = 19.920525
prob_start_v2222 = 0.023783
exp = 0.473778
***** To move:
dist_sav = -1.983286
prob_start_v1 = 0.153632
exp = -0.304697
@706 expects_set.size = 7
@643 (v0 - v1 - v2) = (-1 - 1 - 2)
prob_start_v1 = 1.000000, prob_start_v2 = 0.153632
******* v0 == -1 *******
dist_v1_m1 = 27.857764
                       prob_start_v2 = 0.153632
                       dist_sav = 20.000000
                       exp = 3.072646
@643 (v0 - v1 - v2) = (1 - 2 - 3)
prob_start_v1 = 0.153632, prob_start_v2 = 0.023783
******* Rock n Roll *******
dist_v0_v1 = 27.857764, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.153632
exp = 3.072646
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.153632
exp = 3.072646
******* Rock n Roll *******
dist_v0_v1 = 27.857764, dist_v1_m1 = 19.920525
***** Not to move:
dist_sav = 19.920525
prob_start_v2222 = 0.023783
exp = 0.473778
***** To move:
dist_sav = -1.983286
prob_start_v1 = 0.153632
exp = -0.304697
@643 (v0 - v1 - v2) = (2 - 3 - 4)
prob_start_v1 = 0.023783, prob_start_v2 = 0.002660
******* Rock n Roll *******
dist_v0_v1 = 19.920525, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 19.920525
prob_start_v1111 = 0.023783
exp = 0.473778
***** To move:
dist_sav = 19.920525
prob_start_v1 = 0.023783
exp = 0.473778
******* Rock n Roll *******
dist_v0_v1 = 19.920525, dist_v1_m1 = 19.737290
***** Not to move:
dist_sav = 19.737290
prob_start_v2222 = 0.002660
exp = 0.052505
***** To move:
dist_sav = -9.554055
prob_start_v1 = 0.023783
exp = -0.227228
@706 expects_set.size = 16
@643 (v0 - v1 - v2) = (-1 - 1 - 0)
prob_start_v1 = 1.000000, prob_start_v2 = 0.647410
******* v0 == -1 *******
dist_v1_m1 = 15.813875
                       prob_start_v2 = 0.647410
                       dist_sav = 15.813875
                       exp = 10.238059
@643 (v0 - v1 - v2) = (1 - 0 - 5)
prob_start_v1 = 0.647410, prob_start_v2 = 0.293321
******* Rock n Roll *******
dist_v0_v1 = 15.813875, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 15.813875
prob_start_v1111 = 0.647410
exp = 10.238059
***** To move:
dist_sav = 15.813875
prob_start_v1 = 0.647410
exp = 10.238059
******* Rock n Roll *******
dist_v0_v1 = 15.813875, dist_v1_m1 = 14.600541
***** Not to move:
dist_sav = 14.600541
prob_start_v2222 = 0.293321
exp = 4.282652
***** To move:
dist_sav = -3.387207
prob_start_v1 = 0.647410
exp = -2.192911
@706 expects_set.size = 21
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@706 expects_set.size = 22
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 7)
prob_start_v1 = 0.198958, prob_start_v2 = 0.123086
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
@706 expects_set.size = 25
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 7)
prob_start_v1 = 0.198958, prob_start_v2 = 0.123086
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
@643 (v0 - v1 - v2) = (6 - 7 - 8)
prob_start_v1 = 0.123086, prob_start_v2 = 0.000547
******* Rock n Roll *******
dist_v0_v1 = 15.356428, dist_v1_m1 = 31.353129
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.000547
exp = 0.010941
***** To move:
dist_sav = -37.349831
prob_start_v1 = 0.123086
exp = -4.597251
@706 expects_set.size = 30
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 7)
prob_start_v1 = 0.198958, prob_start_v2 = 0.123086
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
@643 (v0 - v1 - v2) = (6 - 7 - 8)
prob_start_v1 = 0.123086, prob_start_v2 = 0.000547
******* Rock n Roll *******
dist_v0_v1 = 15.356428, dist_v1_m1 = 31.353129
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.000547
exp = 0.010941
***** To move:
dist_sav = -37.349831
prob_start_v1 = 0.123086
exp = -4.597251
@643 (v0 - v1 - v2) = (7 - 8 - 9)
prob_start_v1 = 0.000547, prob_start_v2 = 0.000075
******* Rock n Roll *******
dist_v0_v1 = 31.353129, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.000547
exp = 0.010941
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.000547
exp = 0.010941
@706 expects_set.size = 37
@643 (v0 - v1 - v2) = (-1 - 1 - 0)
prob_start_v1 = 1.000000, prob_start_v2 = 0.647410
******* v0 == -1 *******
dist_v1_m1 = 15.813875
                       prob_start_v2 = 0.647410
                       dist_sav = 15.813875
                       exp = 10.238059
@643 (v0 - v1 - v2) = (1 - 0 - 5)
prob_start_v1 = 0.647410, prob_start_v2 = 0.293321
******* Rock n Roll *******
dist_v0_v1 = 15.813875, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 15.813875
prob_start_v1111 = 0.647410
exp = 10.238059
***** To move:
dist_sav = 15.813875
prob_start_v1 = 0.647410
exp = 10.238059
******* Rock n Roll *******
dist_v0_v1 = 15.813875, dist_v1_m1 = 14.600541
***** Not to move:
dist_sav = 14.600541
prob_start_v2222 = 0.293321
exp = 4.282652
***** To move:
dist_sav = -3.387207
prob_start_v1 = 0.647410
exp = -2.192911
@643 (v0 - v1 - v2) = (0 - 5 - 10)
prob_start_v1 = 0.293321, prob_start_v2 = 0.049823
******* Rock n Roll *******
dist_v0_v1 = 14.600541, dist_v1_m1 = 24.664697
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.049823
exp = 0.996454
***** To move:
dist_sav = -24.728853
prob_start_v1 = 0.293321
exp = -7.253503
******* Rock n Roll *******
dist_v0_v1 = 14.600541, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 14.600541
prob_start_v1111 = 0.293321
exp = 4.282652
***** To move:
dist_sav = 14.600541
prob_start_v1 = 0.293321
exp = 4.282652
@706 expects_set.size = 46
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 11)
prob_start_v1 = 0.198958, prob_start_v2 = 0.000063
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 22.267959
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.000063
exp = 0.001265
***** To move:
Cannot arrive in time! dist_v1_m1 = 22.267959 distances[6] = 17.963833
@706 expects_set.size = 50
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 7)
prob_start_v1 = 0.198958, prob_start_v2 = 0.123086
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
@643 (v0 - v1 - v2) = (6 - 7 - 12)
prob_start_v1 = 0.123086, prob_start_v2 = 0.001294
******* Rock n Roll *******
dist_v0_v1 = 15.356428, dist_v1_m1 = 29.495314
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.001294
exp = 0.025889
***** To move:
dist_sav = -33.634200
prob_start_v1 = 0.123086
exp = -4.139908
@706 expects_set.size = 55
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 7)
prob_start_v1 = 0.198958, prob_start_v2 = 0.123086
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
@643 (v0 - v1 - v2) = (6 - 7 - 8)
prob_start_v1 = 0.123086, prob_start_v2 = 0.000547
******* Rock n Roll *******
dist_v0_v1 = 15.356428, dist_v1_m1 = 31.353129
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.000547
exp = 0.010941
***** To move:
dist_sav = -37.349831
prob_start_v1 = 0.123086
exp = -4.597251
@643 (v0 - v1 - v2) = (7 - 8 - 13)
prob_start_v1 = 0.000547, prob_start_v2 = 0.000024
******* Rock n Roll *******
dist_v0_v1 = 31.353129, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.000547
exp = 0.010941
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.000547
exp = 0.010941
******* Rock n Roll *******
dist_v0_v1 = 31.353129, dist_v1_m1 = 13.130553
***** Not to move:
dist_sav = 13.130553
prob_start_v2222 = 0.000024
exp = 0.000320
***** To move:
dist_sav = 6.869447
prob_start_v1 = 0.000547
exp = 0.003758
@706 expects_set.size = 64
@643 (v0 - v1 - v2) = (-1 - 1 - 0)
prob_start_v1 = 1.000000, prob_start_v2 = 0.647410
******* v0 == -1 *******
dist_v1_m1 = 15.813875
                       prob_start_v2 = 0.647410
                       dist_sav = 15.813875
                       exp = 10.238059
@643 (v0 - v1 - v2) = (1 - 0 - 5)
prob_start_v1 = 0.647410, prob_start_v2 = 0.293321
******* Rock n Roll *******
dist_v0_v1 = 15.813875, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 15.813875
prob_start_v1111 = 0.647410
exp = 10.238059
***** To move:
dist_sav = 15.813875
prob_start_v1 = 0.647410
exp = 10.238059
******* Rock n Roll *******
dist_v0_v1 = 15.813875, dist_v1_m1 = 14.600541
***** Not to move:
dist_sav = 14.600541
prob_start_v2222 = 0.293321
exp = 4.282652
***** To move:
dist_sav = -3.387207
prob_start_v1 = 0.647410
exp = -2.192911
@643 (v0 - v1 - v2) = (0 - 5 - 10)
prob_start_v1 = 0.293321, prob_start_v2 = 0.049823
******* Rock n Roll *******
dist_v0_v1 = 14.600541, dist_v1_m1 = 24.664697
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.049823
exp = 0.996454
***** To move:
dist_sav = -24.728853
prob_start_v1 = 0.293321
exp = -7.253503
******* Rock n Roll *******
dist_v0_v1 = 14.600541, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 14.600541
prob_start_v1111 = 0.293321
exp = 4.282652
***** To move:
dist_sav = 14.600541
prob_start_v1 = 0.293321
exp = 4.282652
@643 (v0 - v1 - v2) = (5 - 10 - 15)
prob_start_v1 = 0.049823, prob_start_v2 = 0.024456
******* Rock n Roll *******
dist_v0_v1 = 24.664697, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.049823
exp = 0.996454
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.049823
exp = 0.996454
******* Rock n Roll *******
dist_v0_v1 = 24.664697, dist_v1_m1 = 18.719023
***** Not to move:
dist_sav = 18.719023
prob_start_v2222 = 0.024456
exp = 0.457797
***** To move:
dist_sav = -2.773349
prob_start_v1 = 0.049823
exp = -0.138176
@706 expects_set.size = 77
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 11)
prob_start_v1 = 0.198958, prob_start_v2 = 0.000063
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 22.267959
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.000063
exp = 0.001265
***** To move:
Cannot arrive in time! dist_v1_m1 = 22.267959 distances[6] = 17.963833
@643 (v0 - v1 - v2) = (6 - 11 - 16)
prob_start_v1 = 0.000063, prob_start_v2 = 0.000030
******* Rock n Roll *******
dist_v0_v1 = 22.267959, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.000063
exp = 0.001265
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.000063
exp = 0.001265
@706 expects_set.size = 83
@643 (v0 - v1 - v2) = (-1 - 1 - 6)
prob_start_v1 = 1.000000, prob_start_v2 = 0.198958
******* v0 == -1 *******
dist_v1_m1 = 17.963833
                       prob_start_v2 = 0.198958
                       dist_sav = 17.963833
                       exp = 3.574045
@643 (v0 - v1 - v2) = (1 - 6 - 7)
prob_start_v1 = 0.198958, prob_start_v2 = 0.123086
******* Rock n Roll *******
dist_v0_v1 = 17.963833, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 17.963833
prob_start_v1111 = 0.198958
exp = 3.574045
***** To move:
dist_sav = 17.963833
prob_start_v1 = 0.198958
exp = 3.574045
@643 (v0 - v1 - v2) = (6 - 7 - 12)
prob_start_v1 = 0.123086, prob_start_v2 = 0.001294
******* Rock n Roll *******
dist_v0_v1 = 15.356428, dist_v1_m1 = 29.495314
***** Not to move:
dist_sav = 20.000000
prob_start_v2222 = 0.001294
exp = 0.025889
***** To move:
dist_sav = -33.634200
prob_start_v1 = 0.123086
exp = -4.139908
@643 (v0 - v1 - v2) = (7 - 12 - 17)
prob_start_v1 = 0.001294, prob_start_v2 = 0.000082
******* Rock n Roll *******
dist_v0_v1 = 29.495314, dist_v1_m1 = 0.000000
***** Not to move:
dist_sav = 20.000000
prob_start_v1111 = 0.001294
exp = 0.025889
***** To move:
dist_sav = 20.000000
prob_start_v1 = 0.001294
exp = 0.025889
@706 expects_set.size = 90
1: (value = 10.238059, node = 12, if_move = 0, to = -1)
2: (value = 3.072646, node = 5, if_move = 0, to = -1)
3: (value = 3.072646, node = 5, if_move = 0, to = -1)
4: (value = 3.072646, node = 5, if_move = 0, to = -1)
5: (value = 3.072646, node = 5, if_move = 1, to = 2)
6: (value = 0.473778, node = 8, if_move = 0, to = -1)
7: (value = -0.304697, node = 8, if_move = 1, to = 2)
8: (value = 3.072646, node = 5, if_move = 0, to = -1)
9: (value = 3.072646, node = 5, if_move = 0, to = -1)
10: (value = 3.072646, node = 5, if_move = 1, to = 2)
11: (value = 0.473778, node = 8, if_move = 0, to = -1)
12: (value = -0.304697, node = 8, if_move = 1, to = 2)
13: (value = 0.473778, node = 8, if_move = 0, to = -1)
14: (value = 0.473778, node = 8, if_move = 1, to = 3)
15: (value = 0.052505, node = 11, if_move = 0, to = -1)
16: (value = -0.227228, node = 11, if_move = 1, to = 3)
17: (value = 10.238059, node = 12, if_move = 0, to = -1)
18: (value = 10.238059, node = 12, if_move = 0, to = -1)
19: (value = 10.238059, node = 12, if_move = 1, to = 0)
20: (value = 4.282652, node = 13, if_move = 0, to = -1)
21: (value = -2.192911, node = 13, if_move = 1, to = 0)
22: (value = 3.574045, node = 9, if_move = 0, to = -1)
23: (value = 3.574045, node = 9, if_move = 0, to = -1)
24: (value = 3.574045, node = 9, if_move = 0, to = -1)
25: (value = 3.574045, node = 9, if_move = 1, to = 6)
26: (value = 3.574045, node = 9, if_move = 0, to = -1)
27: (value = 3.574045, node = 9, if_move = 0, to = -1)
28: (value = 3.574045, node = 9, if_move = 1, to = 6)
29: (value = 0.010941, node = 2, if_move = 0, to = -1)
30: (value = -4.597251, node = 2, if_move = 1, to = 7)
31: (value = 3.574045, node = 9, if_move = 0, to = -1)
32: (value = 3.574045, node = 9, if_move = 0, to = -1)
33: (value = 3.574045, node = 9, if_move = 1, to = 6)
34: (value = 0.010941, node = 2, if_move = 0, to = -1)
35: (value = -4.597251, node = 2, if_move = 1, to = 7)
36: (value = 0.010941, node = 2, if_move = 0, to = -1)
37: (value = 0.010941, node = 2, if_move = 1, to = 8)
38: (value = 10.238059, node = 12, if_move = 0, to = -1)
39: (value = 10.238059, node = 12, if_move = 0, to = -1)
40: (value = 10.238059, node = 12, if_move = 1, to = 0)
41: (value = 4.282652, node = 13, if_move = 0, to = -1)
42: (value = -2.192911, node = 13, if_move = 1, to = 0)
43: (value = 0.996454, node = 4, if_move = 0, to = -1)
44: (value = -7.253503, node = 4, if_move = 1, to = 5)
45: (value = 4.282652, node = 13, if_move = 0, to = -1)
46: (value = 4.282652, node = 13, if_move = 1, to = 5)
47: (value = 3.574045, node = 9, if_move = 0, to = -1)
48: (value = 3.574045, node = 9, if_move = 0, to = -1)
49: (value = 3.574045, node = 9, if_move = 1, to = 6)
50: (value = 0.001265, node = 14, if_move = 0, to = -1)
51: (value = 3.574045, node = 9, if_move = 0, to = -1)
52: (value = 3.574045, node = 9, if_move = 0, to = -1)
53: (value = 3.574045, node = 9, if_move = 1, to = 6)
54: (value = 0.025889, node = 1, if_move = 0, to = -1)
55: (value = -4.139908, node = 1, if_move = 1, to = 7)
56: (value = 3.574045, node = 9, if_move = 0, to = -1)
57: (value = 3.574045, node = 9, if_move = 0, to = -1)
58: (value = 3.574045, node = 9, if_move = 1, to = 6)
59: (value = 0.010941, node = 2, if_move = 0, to = -1)
60: (value = -4.597251, node = 2, if_move = 1, to = 7)
61: (value = 0.010941, node = 2, if_move = 0, to = -1)
62: (value = 0.010941, node = 2, if_move = 1, to = 8)
63: (value = 0.000320, node = 6, if_move = 0, to = -1)
64: (value = 0.003758, node = 6, if_move = 1, to = 8)
65: (value = 10.238059, node = 12, if_move = 0, to = -1)
66: (value = 10.238059, node = 12, if_move = 0, to = -1)
67: (value = 10.238059, node = 12, if_move = 1, to = 0)
68: (value = 4.282652, node = 13, if_move = 0, to = -1)
69: (value = -2.192911, node = 13, if_move = 1, to = 0)
70: (value = 0.996454, node = 4, if_move = 0, to = -1)
71: (value = -7.253503, node = 4, if_move = 1, to = 5)
72: (value = 4.282652, node = 13, if_move = 0, to = -1)
73: (value = 4.282652, node = 13, if_move = 1, to = 5)
74: (value = 0.996454, node = 4, if_move = 0, to = -1)
75: (value = 0.996454, node = 4, if_move = 1, to = 10)
76: (value = 0.457797, node = 7, if_move = 0, to = -1)
77: (value = -0.138176, node = 7, if_move = 1, to = 10)
78: (value = 3.574045, node = 9, if_move = 0, to = -1)
79: (value = 3.574045, node = 9, if_move = 0, to = -1)
80: (value = 3.574045, node = 9, if_move = 1, to = 6)
81: (value = 0.001265, node = 14, if_move = 0, to = -1)
82: (value = 0.001265, node = 14, if_move = 0, to = -1)
83: (value = 0.001265, node = 14, if_move = 1, to = 11)
84: (value = 3.574045, node = 9, if_move = 0, to = -1)
85: (value = 3.574045, node = 9, if_move = 0, to = -1)
86: (value = 3.574045, node = 9, if_move = 1, to = 6)
87: (value = 0.025889, node = 1, if_move = 0, to = -1)
88: (value = -4.139908, node = 1, if_move = 1, to = 7)
89: (value = 0.025889, node = 1, if_move = 0, to = -1)
90: (value = 0.025889, node = 1, if_move = 1, to = 12)
expects_set.size = 90
